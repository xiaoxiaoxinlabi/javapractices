  1、相同点
         两者都是抽象类，都不能实例化。


  2、不同点
          第一点． 接口是抽象类的变体，接口比抽象类更加抽象，接口中所有的方法都是抽象的。
          第二点． 每个类只能继承一个抽象类，但是可以实现多个接口
          第三点．抽象类中不一定都是抽象方法，抽象的而抽象类可以实现部分方法。但是接口中方法必须为public修饰的、抽象的不能实现具体的法。
          第四点． 接口中基本数据类型为static 而抽象类不是的。
          第五点，接口是对动作的抽象，抽象类是对根源的抽象（即对本质的抽象与其他类的本质不同）
                             抽象类包含并实现子类的通用特性，将子类存在差异化的特性进行抽象，交由子类去实现。
                             接口的核心是定义行为，即实现类可以做什么，至于实现类主体是谁、是如何实现的，接口并不关心
          第六点，抽象类表示的是：这个对象是什么( is a关系)。接口表示的是：这个对象能做什么(has a关系)



  3、应用场景
          抽象类(abstract)：
                  当你关注一个事物的本质的时候，用抽象类；
                  如果你拥有一些方法并且想让它们中的一些有默认实现，那么使用抽象类吧
                  抽象类是用来捕捉子类的通用特性的

          接口(interface)：
                  当你关注一个操作的时候，用接口。
                  如果你想实现多重继承，那么你必须使用接口。由于Java不支持多继承，子类不能够继承多个类，但可以实现多个接口。
                  *当你不知道用抽象类还是接口好时就用接口



                  Abstract class vs Interface


  1,Type of methods:
          interface: Interface can have only abstract methods.
          abstract: Abstract class can have abstract and non-abstract methods. From Java 8, it can have default and static methods also.

  2,Final Variables:
          interface: Variables declared in a Java interface are by default final.
          abstract: An abstract class may contain non-final variables.


  3,Type of variables:
          interface: Interface has only static and final variables.
          abstract: Abstract class can have final, non-final, static and non-static variables.


  4,Implementation:
          abstract: Abstract class can provide the implementation of interface.
          interface: Interface can’t provide the implementation of abstract class.


  5, Inheritance vs Abstraction:
          interface: A Java interface can be implemented using keyword “implements”
          abstract : abstract class can be extended using keyword “extends”.

  6,Multiple implementation:
          interface: An interface can extend another Java interface only,
          abstract : an abstract class can extend another Java class and implement multiple Java interfaces.


  7,Accessibility of Data Members:
          interface : Members of a Java interface are public by default.
          abstract : A Java abstract class can have class members like private, protected, etc.

